import type { Observable, ObservableReadable } from '@legendapp/state';
import { FC, ReactElement } from 'react';
export declare function For<T, TProps>({ each, eachValues, optimized: isOptimized, item, itemProps, sortValues, children, }: {
    each?: ObservableReadable<T[] | Record<any, T> | Map<any, T>>;
    eachValues?: ObservableReadable<Record<any, T> | Map<any, T>>;
    optimized?: boolean;
    item?: FC<{
        item: Observable<T>;
        id?: string;
    } & TProps>;
    itemProps?: TProps;
    sortValues?: (A: T, B: T, AKey: string, BKey: string) => number;
    children?: (value: Observable<T>) => ReactElement;
}): ReactElement | null;
