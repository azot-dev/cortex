import { reactive } from '@legendapp/state/react';
export { observer, reactive, reactiveObserver } from '@legendapp/state/react';
import { internal, isFunction, isEmpty } from '@legendapp/state';
import { forwardRef, createElement } from 'react';
import { ActivityIndicator, Button, FlatList, Image, Pressable, ScrollView, SectionList, Switch, Text, TextInput, TouchableWithoutFeedback, View } from 'react-native';

if (process.env.NODE_ENV === 'development' && !internal.globalState.noDepWarn) {
    console.warn('[legend-state]: react-native-components are deprecated and will be removed in version 2.0. Please use the new Reactive components instead: http://www.legendapp.com/open-source/state/fine-grained-reactivity/#reactive-components.');
}
const bindables = {
    TextInput: {
        handler: 'onChange',
        getValue: (e) => e.nativeEvent.text,
        defaultValue: '',
    },
    Switch: { handler: 'onValueChange', getValue: (e) => e, defaultValue: false },
};
const Components = {
    ActivityIndicator: ActivityIndicator,
    Button: Button,
    FlatList: FlatList,
    Image: Image,
    Pressable: Pressable,
    ScrollView: ScrollView,
    SectionList: SectionList,
    Switch: Switch,
    Text: Text,
    TextInput: TextInput,
    TouchableWithoutFeedback: TouchableWithoutFeedback,
    View: View,
};
const Legend = new Proxy({}, {
    get(target, p) {
        if (!target[p]) {
            // Create a wrapper around createElement with the string so we can proxy it
            // eslint-disable-next-line react/display-name
            const render = forwardRef((props, ref) => {
                const propsOut = { ...props };
                if (ref && (isFunction(ref) || !isEmpty(ref))) {
                    propsOut.ref = ref;
                }
                return createElement(Components[p], propsOut);
            });
            target[p] = reactive(render, bindables[p] &&
                {
                    value: bindables[p],
                });
        }
        return target[p];
    },
});

export { Legend };
//# sourceMappingURL=react-native-components.mjs.map
