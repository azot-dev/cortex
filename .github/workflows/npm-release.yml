name: deployment workflow

on:
  push:
    branches:
      - main

jobs:
  test-core:
    name: Run Core tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies for Core
        run: |
          cd core
          yarn install --frozen-lockfile

      - name: Run Core tests
        run: |
          cd core
          yarn test

  test-react:
    name: Run React tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies for React
        run: |
          cd react
          yarn install --frozen-lockfile

      - name: Run React tests
        run: |
          cd react
          yarn test

  release-core:
    needs: [test-core, test-react]
    name: NPM release for core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Pull changes
        run: git pull --rebase origin main

      - name: Install Dependencies for core
        run: |
          cd core
          yarn install --frozen-lockfile

      - name: Build
        run: |
          cd core
          yarn build

      - name: Release core
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd core
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          npx semantic-release

  release-chrome-extension:
    needs: release-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Pull changes
        run: git pull --rebase origin main

      - name: Install jq
        run: sudo apt-get install jq

      - name: Update package version
        run: |
          CORTEX_VERSION=$(jq -r ".version" core/package.json)
          jq '.version = "'"$CORTEX_VERSION"'"' chrome-extension/manifest.json > chrome-extension/manifest.temp.json && mv chrome-extension/manifest.temp.json chrome-extension/manifest.json

      - name: Install dependencies & Update yarn.lock
        run: cd chrome-extension && yarn

      - name: Commit and push if changed
        run: |
          git config user.name 'GitHub Actions Bot'
          git config user.email 'githubactions@example.com'
          git add -A
          git diff-index --quiet HEAD || git commit -m "Update peerDependency to match local cortex version"
          git pull --rebase origin main
          git push

      - name: Build
        run: |
          cd chrome-extension
          yarn build

      - name: Zip Build Files
        run: |
          cd chrome-extension
          zip -r build.zip dist/

      - name: Install webstore cli
        run: |-
          npm install -g chrome-webstore-upload-cli

      - name: Upload step
        run: |-
          chrome-webstore-upload upload \\
            --source chrome-extension/build.zip \\
            --extension-id fpiekoekdbcomggnffgallmgbcmllhgh \\
            --client-id ${{ secrets.CHROME_CLIENT_ID }} \\
            --client-secret ${{ secrets.CHROME_CLIENT_SECRET }} \\
            --refresh-token ${{ secrets.CHROME_REFRESH_TOKEN }}

  update-react-dep:
    needs: release-core
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Pull changes
        run: git pull --rebase origin main

      - name: Install jq
        run: sudo apt-get install jq

      - name: Update peer dependency and package version
        run: |
          CORTEX_VERSION=$(jq -r ".version" core/package.json)
          jq '.peerDependencies["@azot-dev/cortex"] = "'"$CORTEX_VERSION"'"' react/package.json > react/package.temp.json && mv react/package.temp.json react/package.json
          jq '.devDependencies["@azot-dev/cortex"] = "^'"$CORTEX_VERSION"'"' react/package.json > react/package.temp.json && mv react/package.temp.json react/package.json
          jq '.version = "'"$CORTEX_VERSION"'"' react/package.json > react/package.temp.json && mv react/package.temp.json react/package.json

      - name: Update yarn.lock
        run: cd react && yarn

      - name: Commit and push if changed
        run: |
          git config user.name 'GitHub Actions Bot'
          git config user.email 'githubactions@example.com'
          git add -A
          git diff-index --quiet HEAD || git commit -m "Update peerDependency to match local cortex version"
          git pull --rebase origin main
          git push

  release-react:
    needs: update-react-dep
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Pull changes
        run: git pull --rebase origin main

      - name: Install Dependencies for react
        run: |
          cd react
          yarn install --frozen-lockfile

      - name: Build
        run: |
          cd react
          yarn build

      - name: Release react
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd react
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          npm publish --access public

  deploy-doc:
    needs: [release-react, update-adapters]
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd doc
          yarn install --frozen-lockfile --non-interactive

      - name: Build
        run: |
          cd doc
          yarn build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: doc/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  update-adapters:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

      - name: Pull changes
        run: git pull --rebase origin main

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install Dependencies
        run: npm install

      - name: Update adapters READMEs
        run: ./scripts/update-adapters-readme.sh

      - name: Modify adapters in documentation
        run: ./scripts/copy-adapters-doc.sh

      - name: Identify, Bump Version, and Publish Changed Adapters
        run: ./scripts/publish-changed-adapters.sh

      - name: Commit and push if changed
        run: |
          git config user.name 'GitHub Actions Bot'
          git config user.email 'githubactions@example.com'
          git add -A
          git diff-index --quiet HEAD || git commit -m "Update adapter versions"
          git pull --rebase origin main
          git push https://${{secrets.GITHUB_TOKEN}}@github.com/azot-dev/cortex.git main
