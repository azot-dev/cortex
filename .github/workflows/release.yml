name: deployment workflow

on:
  push:
    branches:
      - main
      - rc
  workflow_dispatch:
    inputs:
      run_release_chrome_extension:
        description: 'Set to true to run release-chrome-extension job'
        required: false
        default: 'false'

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-dependencies.outputs.cache-key }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-dependencies
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        run: yarn install --immutable

  test-core:
    name: Test cortex
    needs: install-dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Use Cached Dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run Core tests
        run: yarn workspace @azot-dev/cortex test

  release-core:
    needs: [test-core]
    name: NPM Release cortex
    env:
      DEBUG: 'semantic-release:*'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Use Cached Dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build Core
        run: yarn workspace @azot-dev/cortex build

      - name: Release Core
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          yarn workspace @azot-dev/cortex semantic-release

  deploy-doc:
    name: Deploy documentation
    needs: [release-core]
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Enable Corepack
        run: corepack enable

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Use Cached Dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build
        run: yarn workspace doc build

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: packages/doc/build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
